<?xml version="1.0" encoding="utf-8"?>
<s:Group currentState="comboboxState" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="150" height="23">
	<s:states>
		<s:State name="comboboxState"/>
		<s:State name="btnState"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.events.ListEvent;
			[Bindable]
			public var dataProvider:ArrayCollection=null;
			[Bindable]
			public var labelField:String="label";
			[Bindable]
			public var selectedField:String="selected";
			[Bindable]
			public var iconField:String="icon";

			public var isCheckEnable:Boolean=false;

			public function getSelectedItem():Object
			{
				return tree.selectedItem;
			}

			public var event4ItemCheckBoxClick:Function=null;

			public var event4ItemSelected:Function=null;

			protected function popupUpButton_clickHandler(event:MouseEvent):void
			{
				popup.displayPopUp=!popup.displayPopUp;
				if (popup.displayPopUp)
				{
					for (var i:int=0; i < dataProvider.source.length; i++)
						tree.expandChildrenOf(dataProvider.getItemAt(i), true);
				}
			}

			private function popMouseDownOutsideHandler(event:Event):void
			{
				popup.displayPopUp=false;
			}

			protected function tree_creationCompleteHandler(event:FlexEvent):void
			{
				tree.addEventListener(FlexMouseEvent.MOUSE_DOWN_OUTSIDE, popMouseDownOutsideHandler);
				tree.addEventListener(FlexMouseEvent.MOUSE_WHEEL_OUTSIDE, popMouseDownOutsideHandler);
			}

			protected function tree_changeHandler(event:ListEvent):void
			{
				var isSelectAble:Boolean=true;
				if (event4ItemSelected != null)
					isSelectAble=event4ItemSelected(tree.selectedItem);
				if (textInput!=null)
				{
					textInput.text=isSelectAble && tree.selectedItem ? tree.selectedItem[labelField] : "";
				}
			}


			protected function tree_doubleClickHandler(event:MouseEvent):void
			{
				popup.displayPopUp=false;
			}

			protected function tree_itemClickHandler(event:ListEvent):void
			{
				if (!isCheckEnable)
					popup.displayPopUp=false;
			}
		]]>
	</fx:Script>
	<s:PopUpAnchor width="100%" top="1" bottom="1" id="popup" popUpPosition="below">
		<mx:Tree itemClick="tree_itemClickHandler(event)" doubleClickEnabled="true" doubleClick="tree_doubleClickHandler(event)" borderStyle="solid" borderVisible="true" itemRenderer="com.estudio.component.ComboTreeItemRender" change="tree_changeHandler(event)" iconField="{iconField}"
				 labelField="{labelField}" creationComplete="tree_creationCompleteHandler(event)" id="tree" width="{this.width}" height="300" dataProvider="{dataProvider}">

		</mx:Tree>
	</s:PopUpAnchor>

	<s:TextInput includeIn="comboboxState" editable="false" width="100%" height="100%" id="textInput"/>
	<s:Button click="popupUpButton_clickHandler(event)" cornerRadius="0" height="100%" width="17" right="0" id="popupUpButton" icon="@Embed('combobox_btn.png')"/>

</s:Group>

<?xml version="1.0" encoding="utf-8"?>
<component:ToolbarGroup topBorder="true" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:component="com.estudio.flex.module.component.*" width="100%" height="30" xmlns:component1="com.estudio.flex.component.*">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.utils.Convert;

			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			import spark.events.IndexChangeEvent;

			public var pagnumberOptions:ArrayCollection=new ArrayCollection([{label: 25, data: 25}, {label: 50, data: 50}, {label: 100, data: 100}, {label: 200, data: 200}, {label: 500, data: 500}, {label: 1000, data: 1000}, {label: 2000, data: 2000}, {label: 2500, data: 2500}]);

			private var _numberOfPerPage:int=25;
			private var _currentPage:int=1;
			private var _totalPage:int=1;
			private var _totalRecord:int=1;
			private var _portalGrid:Object=null;

			public function get isLastPage():Boolean
			{
				return _currentPage == _totalPage;
			}

			public function get isFirstPage():Boolean
			{
				return _currentPage == 1;
			}

			public function set numberOfPerPage(v:int):void
			{
				_numberOfPerPage=v;
			}


			public function get recordPrePage():int
			{
				return _numberOfPerPage;
			}

			public function get currentPage():int
			{
				return _currentPage;
			}


			public function set portalGrid(value:Object):void
			{
				_portalGrid=value;
			}

			public function get portalGrid():Object
			{
				return _portalGrid;
			}

			/////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//翻页按钮
			protected function btn_first_clickHandler(event:MouseEvent):void
			{
				if (event.currentTarget == btn_first)
					_currentPage=1;
				else if (event.currentTarget == btn_prev)
					_currentPage-=1;
				else if (event.currentTarget == btn_next)
					_currentPage+=1;
				else if (event.currentTarget == btn_last)
					_currentPage=65535;
				if (_currentPage < 1)
					_currentPage=1;

				loadDataGrid();
			}

			//////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//加载数据
			private function loadDataGrid():void
			{
				_portalGrid.goPage(_numberOfPerPage, _currentPage);
			}

			public function firstPage()
			{
				_portalGrid.goPage(_numberOfPerPage, 1);
			}

			public function lastPage()
			{
				_portalGrid.goPage(_numberOfPerPage, 65535);
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//更新页面内容
			public function updatePages(totalPage:int, totalRecord:int, currentPage:int):void
			{
				_currentPage=currentPage;
				_totalPage=totalPage;
				edit_currentPage.text=String(currentPage);
				label_totalPage.text="共" + totalPage + "页";
				label_recordRange.text="总记录:" + totalRecord + " 当前范围:" + ((currentPage - 1) * _numberOfPerPage + 1) + "-" + (totalPage == currentPage ? totalRecord : currentPage * _numberOfPerPage);
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//回车翻页支持
			protected function edit_currentPage_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == 13)
				{
					var page:int=Convert.str2int(edit_currentPage.text, 1);
					if (_currentPage != page)
					{
						_currentPage=page;
						loadDataGrid();
					}
				}
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			protected function combobox_pageOptions_changeHandler(event:IndexChangeEvent):void
			{
				if (combobox_pageOptions.selectedItem && combobox_pageOptions.selectedIndex >= 0)
				{
					_numberOfPerPage=combobox_pageOptions.selectedItem ? combobox_pageOptions.selectedItem.data as int : 25;
					loadDataGrid();
				}

			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			protected function hgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				combobox_pageOptions.selectedItem=25;
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function refresh():void
			{
				loadDataGrid();
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function nextPage():void
			{
				var page:int=Convert.str2int(edit_currentPage.text, 1);
				_currentPage=page + 1;
				loadDataGrid();
			}
		]]>
	</fx:Script>
	<s:HGroup id="contain" width="100%" height="100%" paddingLeft="2" paddingRight="2" verticalAlign="middle" creationComplete="hgroup1_creationCompleteHandler(event)" gap="2">
		<s:ComboBox id="combobox_pageOptions" selectedIndex="0" creationComplete="{combobox_pageOptions.textInput.editable=false}" width="70" height="21" dataProvider="{pagnumberOptions}" change="combobox_pageOptions_changeHandler(event)"/>
		<component1:ToolbarVertline/>
		<component1:IconButton id="btn_first" width="24" height="24" iconURL="../images/flex/pagination_first.png" click="btn_first_clickHandler(event)"/>
		<component1:IconButton id="btn_prev" width="24" height="24" iconURL="../images/flex/pagination_prev.png" click="btn_first_clickHandler(event)"/>
		<s:Label height="100%" verticalAlign="middle" paddingTop="2" text="页码:"/>
		<s:TextInput id="edit_currentPage" width="30" height="21" keyDown="edit_currentPage_keyDownHandler(event)"/>
		<s:Label id="label_totalPage" height="100%" verticalAlign="middle" paddingTop="2" text="共X页"/>
		<component1:IconButton id="btn_next" width="24" height="24" iconURL="../images/flex/pagination_next.png" click="btn_first_clickHandler(event)"/>
		<component1:IconButton id="btn_last" width="24" height="24" iconURL="../images/flex/pagination_last.png" click="btn_first_clickHandler(event)"/>
		<component1:ToolbarVertline/>
		<component1:IconButton id="btn_refresh" width="24" height="24" iconURL="../images/flex/pagination_load.png" click="btn_first_clickHandler(event)"/>
		<s:Spacer width="100%"/>
		<s:Label id="label_recordRange" height="24" fontWeight="bold" paddingRight="3" paddingTop="3" verticalAlign="middle" text=""/>
	</s:HGroup>
</component:ToolbarGroup>

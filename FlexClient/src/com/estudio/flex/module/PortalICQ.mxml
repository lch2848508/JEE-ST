<?xml version="1.0" encoding="utf-8"?>
<s:Module backgroundColor="#EBF4FF" creationComplete="module1_creationCompleteHandler(event)" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:containers="flexlib.containers.*">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.client.WinICQ;
			import com.estudio.flex.module.component.Navigator4Chat;
			import com.estudio.flex.utils.AlertUtils;
			import com.estudio.flex.utils.ArrayCollectionUtils;
			import com.estudio.flex.utils.ArrayUtils;
			import com.estudio.flex.utils.StringUtils;

			import flash.utils.clearTimeout;
			import flash.utils.setInterval;
			import flash.utils.setTimeout;

			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.events.ResultEvent;

			import spark.components.NavigatorContent;
			import spark.components.TitleWindow;

			import flexlib.events.SuperTabEvent;

			////////////////////////////////////////////////////////////////////////////////////////////////
			private var userId2Name:Object={};
			private var id2Navigator:Object={};
			private var icqWin:Object=null;
			public var loginUserId:String=null;
			private var time_handle:uint=0;
			private var sleepTimes:int=2000;

			////////////////////////////////////////////////////////////////////////////////////////////////
			protected function module1_creationCompleteHandler(event:FlexEvent):void
			{
				var parent:Object=this.parent;
				while (parent && !(parent is TitleWindow))
					parent=parent.parent;
				icqWin=parent;
				loginUserId=FlexGlobals.topLevelApplication.loginUserId;
				ICQService.getUserTree(loginUserId);

				userId2Name[loginUserId]=FlexGlobals.topLevelApplication.loginRealname;

				//订阅消息
				//messageConsumer.selector = "userid = '" + loginUserId + "'";
				//var clientId:String = "ClientInfo" + loginUserId;
				//messageConsumer.subscribe (clientId);
				startReciveMessageThread();
			}

			////////////////////////////////////////////////////////////////////////////////////////////////
			protected function method1_resultHandler(event:ResultEvent):void
			{
				var userData:Object=JSON.parse(event.result as String);
				userTree.dataProvider=[processUserTreeData(userData)];
				userTree.callLater(function():void
				{
					userTree.expandChildrenOf(userData, true);
				});
			}

			////////////////////////////////////////////////////////////////////////////////////////////////
			private function processUserTreeData(userData:Object):Object
			{
				if (StringUtils.equal(userData.type, "root"))
				{
					userData.iconurl="../images/18x18/computer.png";
					userData.root=true;
				}
				else if (StringUtils.equal(userData.type, "dept"))
				{
					userData.iconurl="../images/18x18/department.png";
				}
				else
				{
					userData.iconurl="../images/18x18/user.png";
					userId2Name[userData.id]=userData.label;
				}
				if (userData.children)
				{
					for (var i:int=0; i < userData.children.length; i++)
						processUserTreeData(userData.children[i]);
				}
				return userData;
			}

			////////////////////////////////////////////////////////////////////////////////////////////////
			//双击一个用户 开始对话
			protected function userTree_doubleClickHandler(event:MouseEvent):void
			{
				var item:Object=userTree.selectedItem;
				if (!item)
					return;
				if (StringUtils.equal(item.type, "user"))
				{
					var userName:String=item.label;
					var userId:String=item.id;
					openChat([userId]);
				}
			}

			////////////////////////////////////////////////////////////////////////////////////////////////
			private function openChat(userIds:Array):Navigator4Chat
			{
				var reciverInfos:Array=[];
				var groupIds:Array=[];
				for (var i:int=0; i < userIds.length; i++)
				{
					groupIds.push(userIds[i]);
					reciverInfos.push({userId: userIds[i], name: userId2Name[userIds[i]]});
				}
				groupIds.push(loginUserId);
				groupIds.sort();

				userIds.sort();
				var userNames:Array=[];
				var userIdsKey:String=groupIds.join("$");
				var navigator:Navigator4Chat=id2Navigator[userIdsKey];
				if (!navigator)
				{
					navigator=new Navigator4Chat();
					navigator.label=userIds.length == 1 ? userId2Name[userIds[0]] : "讨论组";
					navigator.loginUserId=loginUserId;
					navigator.ReciverUserIds=userIds;
					navigator.ReciverNames=reciverInfos;
					navigator.groupIds=groupIds;
					navigator.rpcObject=ICQService;
					id2Navigator[userIdsKey]=navigator;

				}
				if (chatNavigator.parent == null)
				{
					saveWinPos(false);
					contain.addElement(chatNavigator);

					if (WinICQPosHasRecord == null)
					{
						treeContain.width=icqWin.width;
						icqWin.width=Math.min(icqWin.width * 3, FlexGlobals.topLevelApplication.width - 100);
						PopUpManager.centerPopUp(icqWin as UIComponent);
					}
					else
					{
						treeContain.width=icqWin.width;
						icqWin.width=WinICQPosHasRecord.w;
						icqWin.height=WinICQPosHasRecord.h;
						icqWin.left=WinICQPosHasRecord.l;
						icqWin.top=WinICQPosHasRecord.t;
					}
				}
				if (navigator.parent == null)
					chatNavigator.addElement(navigator);
				chatNavigator.selectedChild=navigator;
				navigator.content.setFocus()
				return navigator;
			}
			///////////////////////////////////////////////////////////////////////////////////////////////
			[Embed(source="/assets/common/search.png")] //编辑表单
			[Bindable]
			public var imgSearch:Class;

			///////////////////////////////////////////////////////////////////////////////////////////////
			protected function chatNavigator_tabCloseHandler(event:SuperTabEvent):void
			{
				chatNavigator.callLater(function():void
				{
					if (chatNavigator.selectedChild == null)
					{
						saveWinPos(true);
						contain.removeElement(chatNavigator);
						treeContain.percentWidth=100;

						if (WinICQPosNoRecord == null)
						{
							icqWin.width=treeContain.width;
							PopUpManager.centerPopUp(icqWin as UIComponent);
						}
						else
						{
							icqWin.width=WinICQPosNoRecord.w;
							icqWin.height=WinICQPosNoRecord.h;
							icqWin.left=WinICQPosNoRecord.l;
							icqWin.top=WinICQPosNoRecord.t;
						}
					}
				});

			}
			////////////////////////////////////////////////////////////////////////////////////////////
			private var WinICQPosHasRecord:Object=null;
			private var WinICQPosNoRecord:Object=null;

			private function saveWinPos(hasRecord:Boolean):void
			{
				if (hasRecord)
					WinICQPosHasRecord={l: icqWin.left, t: icqWin.top, w: icqWin.width, h: icqWin.height};
				else
					WinICQPosNoRecord={l: icqWin.left, t: icqWin.top, w: icqWin.width, h: icqWin.height};
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			protected function method2_resultHandler(event:ResultEvent):void
			{
				var json:Object=JSON.parse(event.result as String);
				var content:String=json.content;
				var sendDateTime:String=json.send_datetime;
				var reciverIds:Array=json.userIds;
				var chat4Navigator:Navigator4Chat=openChat(reciverIds);
				chat4Navigator.appendContent(sendDateTime, loginUserId, userId2Name[loginUserId], content);
				chat4Navigator.content.text="";
				chat4Navigator.content.setFocus();
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			//接收消息事件处理函数
			protected function method3_resultHandler(event:ResultEvent):void
			{
				var str:String=event.result as String;
				var json:Object=JSON.parse(str);
				if (json && json.r)
				{
					for (var i:int=0; i < json.msgs.length; i++)
					{
						var msgObject:Object=json.msgs[i];
						var content:String=msgObject.content;
						var groupUserIds:Array=msgObject.group_userids.split(",");
						var sendUserId:String=msgObject.send_userid;
						var sendDateTime:String=msgObject.send_datetime;
						ArrayUtils.remove(groupUserIds, groupUserIds.indexOf(loginUserId));
						var chat4Navigator:Navigator4Chat=openChat(groupUserIds);
						chat4Navigator.appendContent(sendDateTime, sendUserId, userId2Name[sendUserId], content);
					}
				}
				if (!isStoped)
					startReciveMessageThread();
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			//过滤按钮功能
			protected function button1_clickHandler(event:Event):void
			{
				var str:String=StringUtils.trim(textSearch.text);
				if (StringUtils.isEmpty(str))
					return;
				str=str.toLocaleLowerCase();
				var list:Array=[];
				ArrayCollectionUtils.TreeData2List(userTree.dataProvider.source, list);
				var index:int=-1;
				var startIndex:int=Math.max(userTree.selectedIndex, 0);
				for (var i:int=startIndex + 1; i < list.length; i++)
				{
					var label:String=list[i].label.toLocaleLowerCase();
					if (label.toLocaleLowerCase().indexOf(str) != -1)
					{
						index=i;
						break;
					}
				}

				if (index == -1)
				{
					for (var i:int=startIndex - 1; i >= 0; i--)
					{
						var label:String=list[i].label.toLocaleLowerCase();
						if (label.toLocaleLowerCase().indexOf(str) != -1)
						{
							index=i;
							break;
						}
					}
				}

				if (index != -1)
				{
					userTree.selectedIndex=index;
					userTree.selectedItem=list[index];
					userTree.scrollToIndex(index);
					userTree.invalidateList();
				}
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			private function reciveMessage():void
			{
				ICQService.reciveMessage(loginUserId);
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			public function startReciveMessageThread():void
			{
				isStoped=false;
				time_handle=setTimeout(reciveMessage, sleepTimes)
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			private var isStoped:Boolean=false;

			public function stopReciveMessageThread():void
			{
				if (time_handle != 0)
				{
					clearTimeout(time_handle);
					time_handle=0;
				}
				isStoped=true;
			}

			////////////////////////////////////////////////////////////////////////////////////////////

			protected function textSearch_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER)
				{
					button1_clickHandler(null);
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RemoteObject destination="ICQService" endpoint="../../messagebroker/amf" id="ICQService">
			<s:method name="getUserTree" result="method1_resultHandler(event)"/>
			<s:method name="sendMessage" result="method2_resultHandler(event)"/>
			<s:method name="reciveMessage" result="method3_resultHandler(event)"/>
		</s:RemoteObject>

		<containers:SuperTabNavigator dragEnabled="false" tabClose="chatNavigator_tabCloseHandler(event)" visible="true" tabHeight="30" id="chatNavigator" width="100%" height="100%" borderVisible="false" borderColor="#7B889C">
		</containers:SuperTabNavigator>
	</fx:Declarations>
	<mx:HDividedBox id="contain" width="100%" height="100%" horizontalGap="4" paddingLeft="-1" paddingTop="-2" paddingRight="-1" paddingBottom="-1">
		<s:BorderContainer id="treeContain" width="100%" height="100%" borderVisible="true" borderColor="#7B889C">
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
			<s:BorderContainer width="100%" height="30" backgroundColor="#DFEDFE" borderVisible="false">
				<s:Label text="查找" id="labelSearch" verticalAlign="middle" left="3" verticalCenter="0">

				</s:Label>
				<s:TextInput keyDown="textSearch_keyDownHandler(event)" left="{labelSearch.width+6}" top="3" right="30" id="textSearch" width="100%" height="24">
				</s:TextInput>
				<s:Button top="3" right="3" label="" icon="{imgSearch}" width="24" height="24" click="button1_clickHandler(event)"/>
			</s:BorderContainer>
			<s:Line width="100%" height="0">
				<s:stroke>
					<s:SolidColorStroke color="#7B889C"/>
				</s:stroke>
			</s:Line>
			<mx:Tree doubleClickEnabled="true" doubleClick="userTree_doubleClickHandler(event)" itemRenderer="com.estudio.flex.module.component.ICQTreeItemRender" width="100%" height="100%" id="userTree">
			</mx:Tree>
		</s:BorderContainer>
	</mx:HDividedBox>
</s:Module>

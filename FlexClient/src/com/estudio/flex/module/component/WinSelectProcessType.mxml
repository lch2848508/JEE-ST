<?xml version="1.0" encoding="utf-8"?>
<component:ResizableTitleWindow skinClass="com.estudio.flex.component.ResizableTitleWindowSkin" creationPolicy="all" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:component="com.estudio.flex.component.*" width="668" height="542" title="请选择需要新建的案件类型"
								close="eventWindowCloseClick(event)" creationComplete="eventWinCreateCompleted(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.component.ResizableTitleWindowSkin;
			import com.estudio.flex.utils.AlertUtils;
			import com.estudio.flex.utils.JSFunUtils;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			private var callFunction:Function=null;
			private var allProcessTypeList:Array=null;

			public static var _instance:WinSelectProcessType=new WinSelectProcessType();

			[Embed(source="/assets/common/folder.png")] //新建
			[Bindable]
			public var imgFolder:Class;

			private function getTreeNodeIcon(item:Object):Class
			{
				return imgFolder;
			}

			//显示选择对话框
			public static function showDialog(callFunction:Function):void
			{
				_instance.callFunction=callFunction;
				_instance.loadCanCreateProcessList();
				if (!_instance.allProcessTypeList || _instance.allProcessTypeList.length == 0)
				{
					AlertUtils.msnMessage("工作流系统", "没有可以新建的业务，请与系统管理员询问您是否能新建业务。", true);
					return;
				}
				else if (_instance.allProcessTypeList.length == 1)
				{
					if (callFunction != null)
						callFunction(_instance.allProcessTypeList[0]);
				}
				else
				{
					FlexGlobals.topLevelApplication.showPopupWindow(_instance, true);
				}
			}


			//关闭事件
			protected function eventWindowCloseClick(event:CloseEvent):void
			{
				FlexGlobals.topLevelApplication.closePopupWindow(_instance);

			}

			//关闭按钮事件
			protected function eventCloseBtnClick(event:MouseEvent):void
			{
				eventWindowCloseClick(null);
			}

			//确定按钮事件
			protected function eventOKBtnClick(event:MouseEvent):void
			{
				if (ProcessList.selectedItem == null)
				{
					AlertUtils.alert("请首先选择需要新建的业务类型！");
					return;
				}
				eventCloseBtnClick(null);
				if (this.callFunction != null)
					this.callFunction(ProcessList.selectedItem);
			}

			private var treeData:Object=null;

			private function loadCanCreateProcessList():void
			{
				if (treeData == null)
				{
					treeData=treeData=JSFunUtils.JSFun("getCanCreateProcessList");
					allProcessTypeList=treeData.process;
				}
			}

			//窗体创建完成事件
			protected function eventWinCreateCompleted(event:FlexEvent):void
			{
				loadCanCreateProcessList();
				generalTreeDatas(treeData);

			}

			private function generalTreeDatas(treeData:Object):void
			{
				FolderTree.dataProvider=new ArrayCollection([treeData]);
				FolderTree.invalidateList();
				FolderTree.callLater(function():void
				{
					fullExpandTree(FolderTree.dataProvider.getItemAt(0));
					FolderTree.selectedIndex=0;
					eventFolderSelectedChange(null);
				});
			}

			private function fullExpandTree(item:Object):void
			{
				FolderTree.expandItem(item, true);
				if (item.children)
				{
					for (var i:int=0; i < item.children.length; i++)
						fullExpandTree(item.children[i]);
				}
			}

			//
			protected function eventFolderSelectedChange(event:ListEvent):void
			{
				var process:Array=FolderTree.selectedItem.process;
				ProcessList.dataProvider=new ArrayCollection(process);
			}

			protected function ProcessList_itemDoubleClickHandler(event:ListEvent):void
			{
				if (ProcessList.selectedItem)
					eventOKBtnClick(null);
			}
		]]>
	</fx:Script>

	<mx:HDividedBox horizontalGap="4" left="-1" top="-1" right="-1" bottom="40">
		<s:VGroup width="300" height="100%">
			<mx:Tree id="FolderTree" iconFunction="getTreeNodeIcon" width="100%" height="100%" borderStyle="solid" borderVisible="true" change="eventFolderSelectedChange(event)">

			</mx:Tree>
		</s:VGroup>
		<s:VGroup width="100%" height="100%">
			<mx:DataGrid doubleClickEnabled="true" verticalScrollPolicy="auto" horizontalScrollPolicy="auto" itemDoubleClick="ProcessList_itemDoubleClickHandler(event)" id="ProcessList" alternatingItemColors="[0xFEFEFE]" width="100%" height="100%" borderStyle="solid" borderVisible="true"
						 headerHeight="28" rowHeight="28">
				<mx:columns>
					<mx:DataGridColumn headerText="业务类型列表" dataField="label">

					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
		</s:VGroup>
	</mx:HDividedBox>

	<s:Group left="0" bottom="0" width="100%" height="40" fontWeight="bold">
		<s:Button label="确定" width="75" height="28" right="85" verticalCenter="0" click="eventOKBtnClick(event)">
		</s:Button>
		<s:Button label="放弃" width="75" height="28" right="5" verticalCenter="0" click="eventCloseBtnClick(event)">
		</s:Button>
	</s:Group>

</component:ResizableTitleWindow>

<?xml version="1.0" encoding="utf-8"?>
<component:PortalGridExControl creationComplete="portalgridexcontrol1_creationCompleteHandler(event)" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:component="com.estudio.flex.module.component.*" width="100%" height="100%" xmlns:flexiframe="com.google.code.flexiframe.*">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.common.InterfaceFormUI;
			import com.estudio.flex.utils.IFrameUtils;
			import com.estudio.flex.utils.UIUtils;
			import com.google.code.flexiframe.IFrame;

			import mx.controls.SWFLoader;
			import mx.events.FlexEvent;
			import mx.events.ModuleEvent;
			import mx.managers.SystemManager;

			import spark.modules.ModuleLoader;
			private var swfInstance:Object=null;
			private var executeFunctionCalls:Array=[];
			private var frameId:String="";
			private var iFrame:IFrame=null;

			//设置IFrameID
			public function setIFrameId(frameId:String):void
			{
				this.frameId=frameId;
			}

			override public function initParams(controlParams:Object):void
			{
				super.initParams(controlParams);
				var url:String=controlParams.url;
				iFrame=new IFrame(frameId);
				iFrame.percentWidth=100;
				iFrame.percentHeight=100;
				iFrame.source=url;
				iFrame.visible=true;
				this.addElement(iFrame);
			}

			//////////////////////////////////////////////////////////////////////
			public function executeFunction(funName:String, params:Object):Object
			{
				return IFrameUtils.execute(iFrame.getIFrameID(), funName, params);
			}

			/////////////////////////////////////////////////////////////////////
			public function updateIFrame(isVisible:Boolean):void
			{
				if (isVisible)
				{
					iFrame.visible=true;
					iFrame.updateFrameVisibility(true);
					iFrame.invalidateDisplayList();
				}
				else
				{
					iFrame.visible=false;
					iFrame.updateFrameVisibility(false);
					iFrame.invalidateDisplayList();
				}
			}
			
			protected function portalgridexcontrol1_creationCompleteHandler(event:FlexEvent):void
			{
				_isCreateCompleted = true;
			}
			
		]]>
	</fx:Script>
</component:PortalGridExControl>

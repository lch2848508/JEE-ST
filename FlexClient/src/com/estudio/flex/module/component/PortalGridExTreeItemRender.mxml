<?xml version="1.0" encoding="utf-8"?>
<s:MXTreeItemRenderer height="23" dataChange="mxtreeitemrenderer1_dataChangeHandler(event)" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.utils.Convert;
			import com.estudio.flex.utils.StringUtils;

			import mx.controls.Tree;
			import mx.events.FlexEvent;

			[Bindable]
			public var checkboxClickFun:Function=null;

			[Bindable]
			public var labelFieldName:String="";

			[Bindable]
			public var iconFieldName:String="";

			[Bindable]
			public var checkFieldName:String="";

			[Bindable]
			public var defaultIconFileName:String="";

			[Bindable]
			public var rootIconFileName:String="computer.png";

			[Bindable]
			public var checkEnabledFieldName:String="";

			[Bindable]
			public var controlInstance:Object=null;

			/////////////////////////////////////////////////////////////////////////////////////
			//复选框被选择
			private function checkBoxClick(event:MouseEvent):void
			{
				if (controlInstance.includeCheckBox && checkboxClickFun != null)
					checkboxClickFun(data);
				data[checkFieldName]=checkbox.selected;
			}

			private function checkBoxVisible():Boolean
			{
				if (controlInstance.includeCheckBox)
				{
					if (!StringUtils.isEmpty(checkEnabledFieldName) && !Convert.object2Boolean(data[checkEnabledFieldName]))
						return false;
					return true;
				}
				return false;
			}

			/////////////////////////////////////////////////////////////////////////////////////////////
			//数据发生变化
			protected function getIconURL():String
			{
				var result:String="../images/18x18/" + defaultIconFileName;
				if (data)
				{
					if (data.root)
						result="../images/18x18/" + rootIconFileName;
					else if (StringUtils.isEmpty(iconFieldName) || StringUtils.isEmpty(data[iconFieldName]))
						result="../images/18x18/" + defaultIconFileName;
					else
						result="../images/18x18/" + data[iconFieldName];
				}
				return result;
			}

			protected function mxtreeitemrenderer1_dataChangeHandler(event:FlexEvent):void
			{
				if (imageControl)
					imageControl.source=getIconURL();
				else
					callLater(function():void
					{
						imageControl.source=getIconURL()
					});
				if (checkbox)
				{
					checkbox.visible=checkBoxVisible();
					checkbox.width=checkbox.visible ? 14 : 0;
				}
				else
					callLater(function():void
					{
						checkbox.visible=checkBoxVisible();
						checkbox.width=checkbox.visible ? 14 : 0;
					});
			}
		]]>
	</fx:Script>
	<s:HGroup left="0" right="0" top="0" bottom="0" verticalAlign="middle" gap="2">
		<s:Rect id="indentationSpacer" width="{treeListData.indent}" percentHeight="100" alpha="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:Group id="disclosureGroup">
			<s:BitmapImage source="{treeListData.disclosureIcon}" visible="{treeListData.hasChildren}"/>
		</s:Group>
		<s:CheckBox id="checkbox" selected="{Convert.object2Boolean (data[checkFieldName] , false)}" verticalCenter="0" horizontalCenter="0" doubleClickEnabled="false" click="checkBoxClick(event)"/>
		<s:Image id="imageControl"/>
		<s:Label id="labelControl" fontWeight="{data.root?'bold':'normal'}" paddingTop="2" verticalCenter="0" text="{data[labelFieldName]}"/>
	</s:HGroup>

</s:MXTreeItemRenderer>

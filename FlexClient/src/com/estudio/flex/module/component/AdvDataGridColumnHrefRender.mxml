<?xml version="1.0" encoding="utf-8"?>
<s:MXAdvancedDataGridItemRenderer dataChange="mxadvanceddatagriditemrenderer1_dataChangeHandler(event)" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" selected="true" focusEnabled="true">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.utils.ArrayUtils;
			import com.estudio.flex.utils.StringUtils;

			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;

			import spark.components.Label;
			import spark.primitives.Line;
			import spark.components.Group;

			private var labels:Array=[];
			private var items:Array=[];

			[Bindable]
			public var portalGrid:Object=null;

			[Bindable]
			public var columnStyle:Object=null;

			private var oldContent:String=null;

			private var barItems:Array=null;

			[Bindable]
			public var align:String=null;

			private function event4LabelClick(event:Event):void
			{
				var index:int=ArrayUtils.indexOf(labels, event.currentTarget);
				var item:Object=items[index];
				portalGrid["event4HrefLinkColumn"](item);
				event.stopPropagation();
				event.stopImmediatePropagation();
			}

			protected function mxadvanceddatagriditemrenderer1_dataChangeHandler(event:FlexEvent):void
			{
				if (oldContent == listData.label)
					return;
				oldContent=listData.label;

				for (var i:int=0; i < labels.length; i++)
					(labels[i] as Label).removeEventListener(MouseEvent.CLICK, event4LabelClick);
				labels=[];
				hgroup.removeAllElements();
				var xmlStr:String=StringUtils.trim(listData.label);
				if (StringUtils.isEmpty(xmlStr))
					return;
				var xml:XMLDocument=new XMLDocument();
				xml.parseXML(xmlStr);
				items=[];
				for (var i:int=0; i < xml.childNodes.length; i++)
				{
					var childNode:XMLNode=xml.childNodes[i];
					var href:String=childNode.attributes.href;
					var labelStr:String=childNode.childNodes[0].nodeValue;
					var item:Object={href: href, label: labelStr, index: i};
					items.push(item);

					var label:Label=new Label();
					label.text=labelStr;
					label.mouseChildren=false;
					label.useHandCursor=true;
					label.buttonMode=true;
					label.addEventListener(MouseEvent.CLICK, event4LabelClick);
					hgroup.addElement(label);
					labels.push(label);

					if (i != xml.childNodes.length - 1)
						hgroup.addElement(new Line4ColumnHrefSplit);
				}
			}
		]]>
	</fx:Script>
	<mx:Canvas width="100%" height="23" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<s:HGroup buttonMode="true" gap="3" color="0x0000FF" width="100%" height="100%" id="hgroup" verticalAlign="middle" horizontalAlign="{align}" paddingTop="3" paddingLeft="4" paddingRight="4">

		</s:HGroup>
	</mx:Canvas>

</s:MXAdvancedDataGridItemRenderer>

<?xml version="1.0" encoding="utf-8"?>
<s:Group currentState="searchResult" creationComplete="group1_creationCompleteHandler(event)" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="250" xmlns:component="com.webgis.component.*"
		 xmlns:component1="com.estudio.flex.module.component.*">
	<s:layout>
		<s:VerticalLayout gap="0">
		</s:VerticalLayout>
	</s:layout>
	<s:states>
		<s:State name="searchResult"/>
		<s:State name="allResult"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.Map;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.Geometry;
			import com.esri.ags.geometry.MapPoint;
			import com.estudio.flex.utils.AjaxUtils;
			import com.estudio.flex.utils.AlertUtils;
			import com.estudio.flex.utils.ArrayCollectionUtils;
			import com.estudio.flex.utils.ArrayUtils;
			import com.estudio.flex.utils.ObjectUtils;
			import com.estudio.flex.utils.StringUtils;
			import com.utilities.ResizeUtils;
			import com.webgis.MapLayerManager;
			import com.webgis.intf.MapWidgetContainIntf;
			import com.webgis.map.MapControl;
			import com.webgis.module.layertree.WinAdvSearch;
			import com.webgis.service.MapServiceClient;

			import flash.net.navigateToURL;

			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.events.Request;
			import mx.managers.CursorManager;
			import mx.utils.ObjectUtil;

			public var mapServiceClient:MapServiceClient=null;
			public var map:MapControl=null;
			[Bindable]
			public var caption:String="图层服务数据列表";
			private var resizeUtils:ResizeUtils=null;
			public var closeCallFunction:Function=null;
			public var mapContainIntf:MapWidgetContainIntf=null;

			////////////////////////////////////////////////////////////////////////////////////////
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				resizeUtils=new ResizeUtils(this);
				resizeUtils.enabledTop=true;
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			private function createUI(uiDefine:Object):void
			{
			}

			/////////////////////////////////////////////////////////////////////////////////////////////
			protected function datagrid_doubleClickHandler(event:MouseEvent):void
			{
			}

			///////////////////////////////////////////////////////////////////////////////////////
			public function show():void
			{
				this.visible=true;
				this.height=this.height == 0 ? 250 : this.height;
				resizeUtils.active();
			}

			public function hide():void
			{
				resizeUtils.inactive();
				this.visible=false;
			}

			protected function toolbarbutton1_clickHandler(event:MouseEvent):void
			{
				if (closeCallFunction)
					closeCallFunction();
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			protected function event4ExportData2Excel(event:MouseEvent):void
			{
				var columns:Array=[];
				var fieldNames:Array=[];
				for (var i:int=0; i < datagrid.columns.length; i++)
				{
					var fieldName:String=datagrid.columns[i].dataField;
					if (StringUtils.isEmpty(fieldName))
						continue;
					columns.push(datagrid.columns[i].headerText);
					fieldNames.push(fieldName);
				}
				var records:Array=[];
				for (var i:int=0; i < datagrid.dataProvider.source.length; i++)
				{
					var record:Object=datagrid.dataProvider.source[i];
					var eRecord:Array=[];
					for (var m:int=0; m < fieldNames.length; m++)
						eRecord.push(record[fieldNames[m]]);
					records.push(eRecord);
				}

				mapServiceClient.executeMethod("exportDataRecord2Excel", {columns: columns, datas: records}, function(json:Object):void
				{
					var path:String=json.path;
					navigateToURL(new URLRequest(path), "viewExcel");
				});
			}
			///////////////////////////////////////////////////////////////////////////////////////////////////////////
		]]>
	</fx:Script>
	<!-- resize -->
	<s:Line width="100%" height="0">
		<s:stroke>
			<s:SolidColorStroke color="0xCCCCCC"/>
		</s:stroke>
	</s:Line>
	<s:BorderContainer width="100%" borderVisible="false" backgroundAlpha="0.90" height="28" backgroundColor="#F8F8F8">
		<s:Label verticalCenter="0" color="#155DB4" left="4" text="{caption}" fontWeight="bold"/>
		<component:ToolbarButton toolTip="导出数据到Excel中" right="26" top="2" icon="@Embed('/assets/common/importexcel.png')" click="event4ExportData2Excel(event)"/>
		<component:ToolbarButton right="2" top="2" icon="@Embed('/assets/common/close.png')" click="toolbarbutton1_clickHandler(event)"/>
	</s:BorderContainer>
	<s:Line width="100%" height="0">
		<s:stroke>
			<s:SolidColorStroke color="0xCCCCCC"/>
		</s:stroke>
	</s:Line>
	<s:BorderContainer width="100%" height="100%" borderVisible="false" backgroundColor="0xFFFFFF">
		<!-- sortableColumns="false" sortExpertMode="true" -->
		<mx:AdvancedDataGrid doubleClick="datagrid_doubleClickHandler(event)" alpha="0.90" borderStyle="none" id="datagrid" width="100%" height="100%" paddingTop="0" verticalAlign="middle" doubleClickEnabled="true" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" draggableColumns="true"
							 rowHeight="25" alternatingItemColors="[0xFFFFFF]">
		</mx:AdvancedDataGrid>
	</s:BorderContainer>

</s:Group>

<?xml version="1.0" encoding="utf-8"?>
<component:TitleWindowEx xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:component="com.estudio.flex.component.*"
						 width="800" height="480" title="批量文件上传组件" close="titlewindowex1_clickHandler(event)" creationComplete="titlewindowex1_creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.utils.AjaxUtils;
			import com.estudio.flex.utils.ArrayUtils;

			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			private var batchFileRefence:FileReferenceList=new FileReferenceList();
			private var allowMaxFileSize:int=1024 * 1024 * 50;
			private var url:String="";
			private var fileFilter:Array=null;
			private var callFunction:Function=null;
			private var isShow:Boolean=false;
			private var params:Object=null;

			[Bindable]
			private var datagridFiles:ArrayCollection=new ArrayCollection([]);

			///////////////////////////////////////////////////////////////////////////////////////////
			protected function titlewindowex1_clickHandler(event:Event):void
			{
				stopUpload();
				PopUpManager.removePopUp(_instance);
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			private function stopUpload():void
			{
				//如果正在上传文件 关闭
				if (isUpload)
				{

				}
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			//批量选择文件
			protected function eventBatchSelectFiles(event:MouseEvent):void
			{
				batchFileRefence.browse(fileFilter);
			}

			////////////////////////////////////////////////////////////////////////////////////////////
			//添加事件
			protected function titlewindowex1_creationCompleteHandler(event:FlexEvent):void
			{
			}

			/////////////////////////////////////////////////////////////////////////////////////////////
			private function selectHandler(event:Event):void
			{
				if (!isShow)
				{
					PopUpManager.addPopUp(_instance, FlexGlobals.topLevelApplication as DisplayObject, true);
					PopUpManager.centerPopUp(_instance);
					isShow=true;
				}
				for (var i:int=0; i < batchFileRefence.fileList.length; i++)
				{
					var fileIsSelected:Boolean=false;

					var file:FileReference=FileReference(batchFileRefence.fileList[i]);

					var item:Object={filename: file.name, descript: "", status: "", size: file.size, date: file.modificationDate};
					//判断文件是否存在
					for (var j:int=0; j < datagridFiles.length; j++)
					{
						var existItem:Object=datagridFiles[j];
						if (existItem.filename == item.filename && existItem.size == item.size && existItem.modificationDate == item.modificationDate)
						{
							fileIsSelected=true;
							break;
						}
					}
					if (fileIsSelected)
						continue;

					//判断文件大小是否合适
					if (file.size == 0 || file.size >= allowMaxFileSize)
					{
						item.status="长度不允许";
						item.disabled=true;
					}
					else
					{
						item.file=file;
					}

					datagridFiles.addItem(item);
				}
				datagrid4Files.dataProvider=datagridFiles;
				//eventUploadFiles(null);
			}

			public function deleteCurrentFile():void
			{
				var index:int=datagrid4Files.selectedIndex;
				if (index != -1)
				{
					datagridFiles.removeItemAt(index);
					var pos:int=datagrid4Files.verticalScrollPosition;
					datagrid4Files.dataProvider=datagridFiles;
					datagrid4Files.verticalScrollPosition=pos;
				}
			}

			///////////////////////////////////////////////////////////////////////////////////////////////////////
			protected function eventUploadFiles(event:MouseEvent):void
			{
				setUIByStatus(true);
				if (datagridFiles.length == 0)
				{
					titlewindowex1_clickHandler(null);
					return;
				}
				currentIndex=0;
				for (var i:int=datagridFiles.length - 1; i >= 0; i--)
				{
					if (datagridFiles[i].file == null)
						datagridFiles.removeItemAt(i);
				}
				startUploadFiles();
			}
			//////////////////////////////////////////////////////////////////////////////////////////////////////////
			private var currentIndex:int=0;
			private var currentItem:Object=null;

			///////////////////////////////////////////////////////////////////////////////////////////////////////
			//开始上传文件
			private function startUploadFiles():void
			{
				currentItem=datagridFiles[currentIndex];
				if (currentItem.file == null)
				{
					currentIndex++;
					if (currentIndex < datagridFiles.length)
						startUploadFiles();
					else
						titlewindowex1_clickHandler(null);
				}
				else
				{
					currentItem.file.addEventListener(Event.COMPLETE, fileRef_loadLocalFile);
					updateProgressStatus("准备数据...");
					currentItem.file.load();
				}
			}

			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//加载文件后开始上传
			private function fileRef_loadLocalFile(evt:Event):void
			{
				var _fileRef:FileReference=FileReference(evt.currentTarget);
				var url:String=this.url;
				//
				var formData:Object={descript: currentItem.descript};
				//"../webgis/pictureService?o=upload", "pic", fileRef.name, fileRef.data
				AjaxUtils.uploadFile(url, "pic", _fileRef.name, _fileRef.data, function(data:String):void
				{

					var json:Object=JSON.parse(data);
					if (json && json.r)
						callFunction({caption: _fileRef.name, url: json.url});
					updateProgressStatus("上传完成");
					currentIndex++;
					if (currentIndex < datagridFiles.length)
						startUploadFiles();
					else
						titlewindowex1_clickHandler(null);
				}, function(w:int, t:int):void
				{
					var p:int=w * 100 / t;
					updateProgressStatus("上传进度:" + p + "%");
					//progressBar.text="上传进度:" + p + "%";
					//progressBar.invalidateDisplayList();
				}, function(event:Event):void
				{
					updateProgressStatus("上传失败");
					currentIndex++;
					if (currentIndex < datagridFiles.length)
						startUploadFiles();
					else
						titlewindowex1_clickHandler(null);
					//AlertUtils.alert("上传文件失败！！！", AlertUtils.ALERT_WARNING);
					//setProgressStatus(false);
					//this.invalidateDisplayList();
					//editFileName.text="";
					//_isUploading=false
				}, params);
				_fileRef.removeEventListener(Event.COMPLETE, fileRef_loadLocalFile);

			}

			private function updateProgressStatus(str:String):void
			{
				currentItem.status=str;
				var pos:int=datagrid4Files.verticalScrollPosition;
				datagrid4Files.dataProvider=datagridFiles;
				datagrid4Files.verticalScrollPosition=pos;
			}

			//////////////////////////////////////////////////////////////////////////////////////////////////////
			//锁定界面
			private function setUIByStatus(isUpload:Boolean):void
			{
				this.isUpload=isUpload;
			}

			[Bindable]
			private var isUpload:Boolean=false;
		]]>
	</fx:Script>
	<mx:DataGrid dataProvider="{datagridFiles}" editable="{!isUpload}" sortableColumns="false" id="datagrid4Files" left="0" top="0" right="0" bottom="40" horizontalGridLineColor="0xCCCCCC"
				 verticalGridLineColor="0xCCCCCC" horizontalGridLines="true" verticalGridLines="true" verticalScrollPolicy="auto" alternatingItemColors="{[0xFFFFFF, 0xFFFFFF]}" borderStyle="none"
				 headerHeight="28" rowHeight="28">
		<mx:columns>
			<mx:DataGridColumn width="300" editable="false" dataField="filename" headerText="文件名称" textAlign="left" resizable="true"/>
			<mx:DataGridColumn width="80" dataField="status" editable="false" headerText="状态" textAlign="left" resizable="false"/>
			<mx:DataGridColumn id="columnDelete" visible="{!isUpload}" width="40" dataField="del" headerText="操作" resizable="false" textAlign="center">
				<mx:itemRenderer>
					<fx:Component>
						<mx:Canvas width="100%">

							<fx:Script>
								<![CDATA[
									protected function linkbutton1_clickHandler(event:MouseEvent):void
									{
										owner["owner"].deleteCurrentFile();
									}
								]]>
							</fx:Script>

							<mx:LinkButton horizontalCenter="0" width="40" label="删除" click="linkbutton1_clickHandler(event)" paddingLeft="2" paddingRight="2">
							</mx:LinkButton>
						</mx:Canvas>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<s:Line id="line1" width="100%" height="0" bottom="38">
		<s:stroke>
			<s:SolidColorStroke color="#000000"/>
		</s:stroke>
	</s:Line>
	<s:Button id="btnClose" width="60" bottom="5" height="28" right="5" label="关闭" click="titlewindowex1_clickHandler(event)">
	</s:Button>
	<s:Button id="btnOK" enabled="{!isUpload}" width="60" bottom="5" height="28" right="70" label="上传" click="eventUploadFiles(event)">
	</s:Button>
	<s:Button id="btnSelect" enabled="{!isUpload}" width="80" bottom="5" height="28" left="5" label="选择文件" click="eventBatchSelectFiles(event)">
	</s:Button>
	<fx:Script>
		<![CDATA[
			private static var _instance:WinUploadFiles=null;

			public static function execute(url:String, params:Object, callFunction:Function):void
			{
				var isFirstRun:Boolean=false;
				if (_instance == null)
				{
					_instance=new WinUploadFiles();
					_instance.fileFilter=[new FileFilter("图片文件(*.jpg,*.jpeg,*.png)", "*.jpg;*.jpeg;*.png"), new FileFilter("office文件(*.doc,*.docx,*.xls,*.xls,*.ppt,*.pptx)", "*.doc;*.docx;*.xls;*.xlsx;*.ppt;*.pptx"), new FileFilter("PDF文件(*.pdf)", "*.pdf"),new FileFilter("视频文件(*.mov;*.flv;*.f4v)", "*.mov;*.flv;*.f4v"), new FileFilter("压缩文件(*.rar,*.zip,*.7z)", "*.rar;*.zip;*.7z")];
					isFirstRun=true;
					_instance.batchFileRefence.addEventListener(Event.SELECT, _instance.selectHandler);
					_instance.setUIByStatus(false);
				}

				_instance.params=params;
				_instance.url=url;
				_instance.callFunction=callFunction;
				_instance.isShow=false;
				if (!isFirstRun)
				{
					_instance.setUIByStatus(false);
					_instance.datagridFiles=new ArrayCollection([]);
				}
				_instance.batchFileRefence.browse(_instance.fileFilter);
			}

			//////////////////////////////////////////////////////////////////////////////
			public static function close():void
			{
				if (_instance != null)
					PopUpManager.removePopUp(_instance);
			}
			/////////////////////////////////////////////////////////////////////////////
		]]>
	</fx:Script>
</component:TitleWindowEx>

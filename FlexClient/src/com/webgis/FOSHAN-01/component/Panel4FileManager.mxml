<?xml version="1.0" encoding="utf-8"?>
<s:VGroup gap="0" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:component="com.webgis.component.*">
	<fx:Script>
		<![CDATA[
			import com.estudio.flex.utils.AjaxUtils;
			import com.estudio.flex.utils.AlertUtils;
			import com.estudio.flex.utils.ArrayCollectionUtils;
			import com.estudio.flex.utils.ArrayUtils;
			import com.estudio.flex.utils.StringUtils;
			import com.webgis.service.MapServiceClient;

			import flash.net.navigateToURL;

			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;

			import spark.events.IndexChangeEvent;

			public var mapServiceClient:MapServiceClient=null;
			[Bindable]
			public var recordId:String="";
			[Bindable]
			public var layerId:String="";

			[Bindable]
			public var readonly:Boolean=false;

			[Bindable]
			private var _dataProvider:ArrayCollection=null;

			public function set dataProvider(v:ArrayCollection):void
			{
				selectedItem=null;
				_dataProvider=v;
				if (tree && _dataProvider.length != 0)
				{
					tree.callLater(function():void
					{
						tree.expandChildrenOf(_dataProvider.getItemAt(0), true);
					});
					selectedItem=_dataProvider.getItemAt(0);
				}
			}

			[Bindable]
			public var pictureTypes:ArrayCollection=null;


			public var callFunction:Function=null;

			protected function btnUpload_clickHandler(event:MouseEvent):void
			{
				if (selectedItem == null || !selectedItem.isFolder)
				{
					AlertUtils.alert("请首先选择一个文件夹.");
					return;
				}
				WinUploadFiles.execute("../webgis/pictureService?o=uploadFile", {id: recordId, layerId: layerId}, uploadFileCallFunction);
			}

			///////////////////////////////////////////////////////////////////////////////////////////
			private function uploadFileCallFunction(json:Object):void
			{
				if (!selectedItem.children)
					selectedItem.children=[];
				selectedItem.children.push(json);
				tree.expandItem(selectedItem, true);
				(selectedItem.children as Array).sort(fileListCompareFunction);
				_dataProvider.refresh();
				tree.invalidateList();
				callFunction(null);
			}

			private function fileListCompareFunction(item1:Object, item2:Object):int
			{
				var f1:Boolean=item1.isFolder;
				var f2:Boolean=item2.isFolder;
				if (f1 == f2)
					return item1.caption.localeCompare(item2.caption);
				else if (f1)
					return -1;
				else if (f2)
					return 1;
				return 0;
			}

			///////////////////////////////////////////////////////////////////////////////////////////

			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if (selectedItem)
				{
					AlertUtils.confirm("确定要删除" + selectedItem.caption + "?", function():void
					{
						var files:Array=[];
						var items:Array=[];
						ArrayCollectionUtils.TreeData2List([selectedItem], items);
						for (var i:int=0; i < items.length; i++)
						{
							if (!items.isFolder)
								files.push(items[i].url);
							AjaxUtils.postData("../webgis/pictureService?o=delete", {files: JSON.stringify(files)}, null);
						}
						for (var j:int=items.length - 1; j >= 0; j--)
						{
							var item:Object=items[j];
							if (item == _dataProvider.getItemAt(0))
								continue;
							var pItem:Object=tree.getParentItem(item);
							var pItemArray:Array=pItem.children;
							ArrayUtils.remove(pItemArray, ArrayUtils.indexOf(pItemArray, item));
							if (pItemArray.length == 0)
								delete pItem.children;
						}
						tree.invalidateList();
						tree.callLater(function():void
						{
							tree.selectedIndex=0;
							tree.selectedItem=_dataProvider.getItemAt(0);
							selectedItem=_dataProvider.getItemAt(0);
						});
						callFunction(null);
					});
				}
			}
			////////////////////////////////////////////////////////////////////////////////////
			private var selectedItem:Object=null;

			protected function tree_changeHandler(event:ListEvent):void
			{
				selectedItem=tree.selectedItem;
			}

			////////////////////////////////////////////////////////////////////////////////////
			protected function tree_doubleClickHandler(event:MouseEvent):void
			{
				if (selectedItem && !selectedItem.isFolder)
					navigateToURL(new URLRequest(selectedItem.url), "viewWindow");
			}

			////////////////////////////////////////////////////////////////////////////////////

			protected function btnNewFolder_clickHandler(event:MouseEvent):void
			{
				if (selectedItem == null || !selectedItem.isFolder)
				{
					AlertUtils.alert("请首先选择一个文件夹.");
					return;
				}
				WinInputText.execute("请输入文件夹名称", "", function(text:String):void
				{
					var item:Object={caption: text, isFolder: true};
					if (!selectedItem.children)
						selectedItem.children=[];
					selectedItem.children.push(item);
					(selectedItem.children as Array).sort(fileListCompareFunction);
					tree.expandItem(selectedItem, true);
					_dataProvider.refresh();
					tree.invalidateList();
					tree.callLater(function():void
					{
						tree.selectedItem=item;
						selectedItem=item;
						tree.callLater(function():void
						{
							tree.selectedIndex=tree.getItemIndex(selectedItem);
							tree.scrollToIndex(tree.getItemIndex(selectedItem));
						});
					});
					callFunction(null);
				});
			}

			//////////////////////////////////////////////////////////////////////////////////////
			protected function btnRenameFolder_clickHandler(event:MouseEvent):void
			{
				if (selectedItem == null || selectedItem == _dataProvider.getItemAt(0) || !selectedItem.isFolder)
				{
					AlertUtils.alert("请首先选择一个文件夹.");
					return;
				}
				WinInputText.execute("请输入文件夹名称", selectedItem.caption, function(text:String):void
				{
					selectedItem.caption=text;
					var pItem:Object=tree.getParentItem(selectedItem);
					(pItem.children as Array).sort(fileListCompareFunction);
					_dataProvider.refresh();
					tree.invalidateList();
					callFunction(null);
				});
			}

			//////////////////////////////////////////////////////////////////////////////////////
			protected function tree_creationCompleteHandler(event:FlexEvent):void
			{
				if (_dataProvider.length != 0)
					tree.expandChildrenOf(_dataProvider.getItemAt(0), true);
			}

			//////////////////////////////////////////////////////////////////////////////////////
			protected function btnSearch_clickHandler(event:MouseEvent):void
			{
				var filterStr:String=StringUtils.trim(text.text).toLowerCase();
				if (StringUtils.isEmpty(filterStr))
					return;
				var list:Array=[];
				ArrayCollectionUtils.TreeData2List(_dataProvider.source, list);
				var index:int=tree.selectedItem ? ArrayUtils.indexOf(list, tree.selectedItem) : 0;
				var isFound:Boolean=false;
				for (var i:int=index + 1; i < list.length; i++)
				{
					var item:Object=list[i];
					if (item.caption.indexOf(filterStr) != -1)
					{
						var pItems:Array=[];
						var pItem:Object=tree.getParentItem(item);
						while (pItem != null)
						{
							pItems.push(pItem);
							pItem=tree.getParentItem(pItem);
						}
						for (var j:int=pItems.length - 1; j >= 0; j--)
							tree.expandItem(pItems[j], true);
						tree.callLater(function():void
						{
							tree.selectedItem=item;
							tree.callLater(function():void
							{
								tree.scrollToIndex(tree.selectedIndex);
							});
						});
						isFound=true;
						break;
					}
				}

				if (!isFound)
				{
					for (var i:int=0; i < index; i++)
					{
						var item:Object=list[i];
						if (item.caption.indexOf(filterStr) != -1)
						{
							var pItems:Array=[];
							var pItem:Object=tree.getParentItem(item);
							while (pItem != null)
							{
								pItems.push(pItem);
								pItem=tree.getParentItem(pItem);
							}
							for (var j:int=pItems.length - 1; j >= 0; j--)
								tree.expandItem(pItems[j], true);
							tree.callLater(function():void
							{
								tree.selectedItem=item;
								tree.callLater(function():void
								{
									tree.scrollToIndex(tree.selectedIndex);
								});
							});
							isFound=true;
							break;
						}
					}
				}
			}

			//////////////////////////////////////////////////////////////////////////////////////
			protected function text_enterHandler(event:FlexEvent):void
			{
				btnSearch_clickHandler(null);
			}

			//////////////////////////////////////////////////////////////////////////////////////

			protected function tree_dragCompleteHandler(event:DragEvent):void
			{
				callFunction(null);
			}

			protected function tree_clickHandler(event:MouseEvent):void
			{
				tree.setFocus();
			}
		]]>
	</fx:Script>
	<s:HGroup gap="2" paddingLeft="2" paddingRight="2" height="28" width="100%" verticalAlign="middle">
		<s:Label text="查找" fontWeight="bold"/>
		<s:TextInput enter="text_enterHandler(event)" width="100%" height="23" id="text"/>
		<component:ToolbarButton click="btnSearch_clickHandler(event)" selected="true" id="btnSearch" toolTip="查找" icon="@Embed('/assets/common/search.png')"/>
		<component:ToolbarButton click="btnNewFolder_clickHandler(event)" enabled="{!readonly}" selected="true" id="btnNewFolder" toolTip="新建目录" icon="@Embed('/assets/common/folder.png')"/>
		<component:ToolbarButton click="btnRenameFolder_clickHandler(event)" enabled="{!readonly}" selected="true" id="btnRenameFolder" toolTip="重命名目录" icon="@Embed('/assets/webgis/folder-rename.png')"/>
		<component:ToolbarButton click="btnUpload_clickHandler(event)" enabled="{!readonly}" selected="true" id="btnUpload" toolTip="上传文件" icon="@Embed('/assets/common/upload.png')"/>
		<component:ToolbarButton click="btnDelete_clickHandler(event)" enabled="{!readonly}" selected="true" id="btnDelete" toolTip="删除文件或目录" icon="@Embed('/assets/common/delete.png')"/>
	</s:HGroup>

	<s:Line width="100%" height="0">
		<s:stroke>
			<s:SolidColorStroke color="#DDE1E5"/>
		</s:stroke>
	</s:Line>

	<mx:Tree dragEnabled="true" dropEnabled="true" dragMoveEnabled="true" creationComplete="tree_creationCompleteHandler(event)" labelField="caption" itemRenderer="com.webgis.component.TreeItemRender4FileManager" dataProvider="{_dataProvider}" doubleClickEnabled="true" id="tree"
			 doubleClick="tree_doubleClickHandler(event)" change="tree_changeHandler(event)" width="100%" height="100%" borderVisible="false"/>

</s:VGroup>
